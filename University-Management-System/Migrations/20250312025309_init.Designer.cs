// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using University_Management_System.Models.DataConnection;

#nullable disable

namespace University_Management_System.Migrations
{
    [DbContext(typeof(Data))]
    [Migration("20250312025309_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("University_Management_System.Models.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseCost")
                        .HasColumnType("int");

                    b.Property<int>("CourseDepartment")
                        .HasColumnType("int");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstructorCourse")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseDepartment");

                    b.HasIndex("InstructorCourse")
                        .IsUnique();

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseCode = "IT101",
                            CourseCost = 7000,
                            CourseDepartment = 1,
                            CourseName = ".Net",
                            InstructorCourse = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseCode = "IT151",
                            CourseCost = 5000,
                            CourseDepartment = 1,
                            CourseName = ".JS",
                            InstructorCourse = 2
                        });
                });

            modelBuilder.Entity("University_Management_System.Models.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentFaculty")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentFaculty");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentFaculty = 1,
                            Description = "Focuse On Network",
                            Name = "IT"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentFaculty = 2,
                            Description = "Focuse On WebSites and Apis",
                            Name = "WebDev"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentFaculty = 3,
                            Description = "Doctors Generations ",
                            Name = "Medical"
                        });
                });

            modelBuilder.Entity("University_Management_System.Models.Entities.Faculty", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Faculties");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FacultyName = "Science"
                        },
                        new
                        {
                            ID = 2,
                            FacultyName = "Computer Science"
                        },
                        new
                        {
                            ID = 3,
                            FacultyName = "Dentisits"
                        });
                });

            modelBuilder.Entity("University_Management_System.Models.Entities.Instructor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("InstructorDepartment")
                        .HasColumnType("int");

                    b.Property<string>("InstructorEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstructorFaculty")
                        .HasColumnType("int");

                    b.Property<string>("InstructorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("InstructorDepartment");

                    b.HasIndex("InstructorFaculty");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            InstructorDepartment = 1,
                            InstructorEmail = "Yahoo@gmail.com",
                            InstructorFaculty = 1,
                            InstructorName = "Ashley"
                        },
                        new
                        {
                            ID = 2,
                            InstructorDepartment = 1,
                            InstructorEmail = "Yahoo4@gmail.com",
                            InstructorFaculty = 1,
                            InstructorName = "Noha"
                        });
                });

            modelBuilder.Entity("University_Management_System.Models.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentDepartment")
                        .HasColumnType("int");

                    b.Property<int>("StudentFaculty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentDepartment");

                    b.HasIndex("StudentFaculty");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("University_Management_System.Models.Entities.StudentCourse", b =>
                {
                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("CourseID", "StudentID");

                    b.HasIndex("StudentID");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("University_Management_System.Models.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("University_Management_System.Models.Entities.Course", b =>
                {
                    b.HasOne("University_Management_System.Models.Entities.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("CourseDepartment")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("University_Management_System.Models.Entities.Instructor", "Instructor")
                        .WithOne("Course")
                        .HasForeignKey("University_Management_System.Models.Entities.Course", "InstructorCourse")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("University_Management_System.Models.Entities.Department", b =>
                {
                    b.HasOne("University_Management_System.Models.Entities.Faculty", "Faculty")
                        .WithMany("Departments")
                        .HasForeignKey("DepartmentFaculty")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("University_Management_System.Models.Entities.Instructor", b =>
                {
                    b.HasOne("University_Management_System.Models.Entities.Department", "Department")
                        .WithMany("Instructors")
                        .HasForeignKey("InstructorDepartment")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("University_Management_System.Models.Entities.Faculty", "Faculty")
                        .WithMany("Instructors")
                        .HasForeignKey("InstructorFaculty")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("University_Management_System.Models.Entities.Student", b =>
                {
                    b.HasOne("University_Management_System.Models.Entities.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("StudentDepartment")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("University_Management_System.Models.Entities.Faculty", "Faculty")
                        .WithMany("Students")
                        .HasForeignKey("StudentFaculty")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("University_Management_System.Models.Entities.StudentCourse", b =>
                {
                    b.HasOne("University_Management_System.Models.Entities.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("University_Management_System.Models.Entities.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("University_Management_System.Models.Entities.Course", b =>
                {
                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("University_Management_System.Models.Entities.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Instructors");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("University_Management_System.Models.Entities.Faculty", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Instructors");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("University_Management_System.Models.Entities.Instructor", b =>
                {
                    b.Navigation("Course")
                        .IsRequired();
                });

            modelBuilder.Entity("University_Management_System.Models.Entities.Student", b =>
                {
                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
